AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 10
    MemorySize: 128
    Environment:
      Variables:
        TABLE_NAME: !Ref ChatAppTable

Resources:

  # Roles
  QueryFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: QueryPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:Query
                Resource: !GetAtt ChatAppTable.Arn
        - PolicyName: LambdaCloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"

  MutationFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: MutationPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                Resource: !GetAtt ChatAppTable.Arn
        - PolicyName: LambdaCloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"

  # AppSync API (CloudFormation native)
  ChatGraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: ChatAppApi
      AuthenticationType: API_KEY

  ChatGraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt ChatGraphQLApi.ApiId
      DefinitionS3Location: schema.graphql

  ChatGraphQLApiKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt ChatGraphQLApi.ApiId
      Expires: 1774459540 # 25 March 2026

  # DynamoDB Table (native CFN)
  ChatAppTable:
    Type: AWS::DynamoDB::Table
    Properties:
      # TableName: ChatAppTable
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  # Lambda Layer (SAM)
  SharedDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: SharedDependencies
      ContentUri: layers/shared-dependencies-layer
      CompatibleRuntimes:
        - nodejs18.x

  # Lambda Functions (SAM)
  CreateConversationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/mutations/createConversation
      Handler: index.handler
      Layers:
        - !Ref SharedDependenciesLayer
      Role: !GetAtt MutationFunctionRole.Arn

  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/mutations/sendMessage
      Handler: index.handler
      Layers:
        - !Ref SharedDependenciesLayer
      Role: !GetAtt MutationFunctionRole.Arn


  GetConversationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/queries/getConversations
      Handler: index.handler
      Layers:
        - !Ref SharedDependenciesLayer
      Role: !GetAtt QueryFunctionRole.Arn

  ConversationMessagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/queries/conversationMessages
      Handler: index.handler
      Layers:
        - !Ref SharedDependenciesLayer
      Role: !GetAtt QueryFunctionRole.Arn

Outputs:
  GraphQLAPIURL:
    Description: The URL of the AppSync GraphQL API
    Value: !GetAtt ChatGraphQLApi.GraphQLUrl

  APIKey:
    Description: The AppSync API Key
    Value: !GetAtt ChatGraphQLApiKey.ApiKey
